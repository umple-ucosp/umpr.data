namespace BusinessProcessModel;

class Namespace
{
}

class Task
{
	isA Namespace;
	0..1 -> 3..* DataSet containsDataSet;
	0..1 -> * ControlPoint containsControlPoint;
	* invokes -- * InvokerTask invoker;
	* terminates -- * TerminatorTask terminator;
}

class DataSet
{
	isA Namespace;
	0..1 -> * DataElement contains;
	0..1 -> * ControlFlow source;
	0..1 -> * ControlPoint triggers;
}

class Parameter
{
}

class DataElement
{
	isA Parameter;
	0..1 -> 1..* DataFlow sink;
	0..1 -> 1..* DataFlow source;
}

class ModelElement
{
}

class Flow
{
	isA ModelElement;
}

class DataFlow
{
	isA Flow;
}

class ControlFlow
{
	isA Flow;
}

class ControlPoint
{
	isA ModelElement;
	0..1 -> * ControlFlow sink;
}

class Input
{
	isA DataElement;
}

class Output
{
	isA DataElement;
}

class OutputSet
{
	isA DataSet;
	0..1 -> * Output containsOutput;
}

class InputSet
{
	isA DataSet;
	0..1 -> * Input containsInput;
}

class Exception
{
	isA Output;
}

class SimpleTask
{
	isA Task;
}

class CoumpoundTask
{
	isA Task;
	0..1 -> * Task containsTask;
	0..1 -> * Flow containsFlow;
	0..1 -> 1..* BusinessProcess realizes;
}

class MutliTask
{
	isA CoumpoundTask;
}

class InvokerTask
{
	isA SimpleTask;
}

class TerminatorTask
{
	isA SimpleTask;
}

class ApplicationTask
{
	isA SimpleTask;
}

class Decision
{
	isA ApplicationTask;
}

class Clock
{
	isA ApplicationTask;
}

class SendCommunication
{
	isA ApplicationTask;
}

class ReceiveCommunication
{
	isA ApplicationTask;
}

class BusinessProcess
{
	isA ApplicationTask;
}

namespace PrimitiveTypes;

class Boolean
{
}

class Integer
{
}

class String
{
}