namespace DiagramInterchange;

class Dimension
{
	Double width;
	Double heigth;
}

class Point
{
	Double x;
	Double y;
}

class BezierPoint
{
	isA Point;
	0..1 -> 0..2 Point controls;
}

class Property
{
	String key;
	String value;
}

class DiagramElement
{
	Boolean isVisible;
	0..1 -> * Property properties;
	1..* referenced -- * Reference references;
	* contained -- * GraphElement de_container;
}

class Reference
{
	isA DiagramElement;
	Boolean isIndividualRepresentation;
}

class GraphElement
{
	isA DiagramElement;
	0..1 -> 1..* Point position;
	1..* gc_graphElement -- * GraphConnector anchorages;
	1..* dl_graphElement -- * DiagramLink links;
	* smb_graphElement -- 1..* SemanticModelBridge semanticModel;
}

class GraphEdge
{
	isA GraphElement;
	0..1 -> 0..2 Point waypoints;
	* graphEdges -- 2 GraphConnector anchors;
}

class GraphNode
{
	isA GraphElement;
	0..1 -> * Dimension size;
}

class GraphConnector
{
	0..1 -> 1..* Point position;
}

class DiagramLink
{
	Double zoom;
	0..1 -> 1..* Point viewPort;
	* diagramLinks -- 1..* Diagram dl_diagram;
}

class SemanticModelBridge
{
	String presentation;
	1..* namespace -- * Diagram smb_diagram;
}

class Diagram
{
	isA GraphNode;
	String name;
	Double zoom;
	0..1 -> 1..* Point viewPort;
}

class SimpleSemanticModelElement
{
	isA SemanticModelBridge;
	String typeInfo;
}

class UML1SemanticModelBridge
{
	isA SemanticModelBridge;
	0..1 -> 1..* CoreElement element;
}

class CoreSemanticModelBridge
{
	isA SemanticModelBridge;
	0..1 -> 1..* ElementsElement element;
}

class CoreElement
{
}

class ElementsElement
{
}

class LeafElement
{
	isA DiagramElement;
}

class TextElement
{
	isA LeafElement;
	String text;
}

class Image
{
	isA LeafElement;
	String uri;
	String mimeType;
}

class GraphicPrimitive
{
	isA LeafElement;
}

class Polyline
{
	isA GraphicPrimitive;
	Boolean closed;
	0..1 -> 2..* Point waypoints;
}

class Ellipse
{
	isA GraphicPrimitive;
	Double radiusX;
	Double radiusY;
	Double rotation;
	Double startAngle;
	Double endAngle;
	0..1 -> 1..* Point center;
}

namespace PrimitiveTypes;

class Integer
{
}

class String
{
}

class Boolean
{
}

class Double
{
}