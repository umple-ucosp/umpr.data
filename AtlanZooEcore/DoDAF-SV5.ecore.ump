namespace DoDAF;

class Element
{
	String name;
	String description;
	String view;
}

class DoDAFModel
{
	isA Element;
	0..1 -> * Document document;
	0..1 -> * SystemFunctionTraceabilityMatrix sftm;
	0..1 -> * SystemDocument sd;
	0..1 -> * AM am;
	0..1 -> * System system;
	0..1 -> * Task task;
	0..1 -> * Capability capability;
	0..1 -> * CapabilityDocument capabilityDocument;
	0..1 -> * SystemCapability systemCapability;
}

class Document
{
	isA Element;
	String type;
	0..1 -> * CapabilityDocument cites;
	0..1 -> * SystemDocument describes;
	0..1 -> * ArchitectureDocument records;
	0..1 -> * PA isThePrimaryReferenceFor;
}

class SystemFunctionTraceabilityMatrix
{
	isA Document;
	0..1 -> * SystemFunctionTraceabilityElement isDefinedBy;
}

class SystemFunctionTraceabilityElement
{
	isA Element;
	SupportStatusCode supportStatusCode;
	0..1 -> * System system;
	0..1 -> * Capability capability;
	* isCitedFor -- * SystemFunction systemFunction;
	* mayBeCitedFor -- * SystemPA systemProcessActivity;
	* isCitedFor -- * Task operationalActivity;
}

class SystemDocument
{
	isA Element;
}

class ArchitectureDocument
{
	isA Element;
}

class PA
{
	isA Element;
	* isChildFor -- * PA isParentFor;
	* isParentFor -- * PA isChildFor;
	0..1 -> * PATask correspondsTo;
	0..1 -> * AMPA isIncludedIn;
	0..1 -> * SystemPA isAssignedTo;
	0..1 -> * SoftwareApplicationProcedurePA isSupportedBy;
	0..1 -> * PAExchangeRequirement isTheConsumerFor;
	0..1 -> * PAExchangeRequirement isTheProducerFor;
}

class SystemFunction
{
	isA PA;
}

class SystemPA
{
	isA Element;
	0..1 -> * SystemCapability provides;
	0..1 -> * SystemOperationalCapabilityTask enables;
}

class SoftwareApplicationProcedurePA
{
	isA Element;
}

class AM
{
	isA InformationAsset;
	String type;
	0..1 -> * PATask isCitedBy;
	0..1 -> * AMPA includes;
}

class InformationAsset
{
	isA Element;
}

class AMPA
{
	isA Element;
	* isSubordinateOf -- * AMPA isOrdinateOf;
	* isOrdinateOf -- * AMPA isSubordinateOf;
}

class System
{
	isA Element;
	0..1 -> * SystemPA isDesignedToProvide;
	0..1 -> * SystemDocument isDescribedBy;
	0..1 -> * SystemCapability performs;
	0..1 -> * SystemOperationalCapabilityTask isUsedToAccomplish;
}

class Task
{
	isA Element;
	String levelIdentifier;
	String references;
	String cost;
	0..1 -> * PATask correspondsTo;
	0..1 -> * ArchitectureTask isSupportedBy;
	0..1 -> * InformationExchangeRequirement isTheSourceOfNeedFor;
	0..1 -> * InformationExchangeRequirement isTheDestinationOfNeedFor;
}

class ArchitectureTask
{
	isA Element;
}

class OperationalCapabilityTask
{
	isA Task;
	0..1 -> 1..* SystemOperationalCapabilityTask isAccomplishedA;
}

class SystemOperationalCapabilityTask
{
	isA Task;
}

class PATask
{
	isA Task;
}

class Capability
{
	isA Element;
	0..1 -> * SystemCapability isPerformedBy;
	0..1 -> * Capability isOrdinateFor;
	0..1 -> * Capability isSubordinateOf;
	0..1 -> * NetworkCapability isPerformedByNC;
	0..1 -> * NodeLinkCapability isPerformedByNLC;
	0..1 -> * MaterielItemCapabilityNorm isUsedInMICN;
	0..1 -> * OrganizationTypeCapabilityNorm isUsedInOTCN;
	0..1 -> * RequiredInformationTechnologyCapability isAttainedFor;
	0..1 -> * CapabilityDocument isCitedInCD;
	0..1 -> * SystemCapability isPerformedBySC;
}

class CapabilityDocument
{
	isA Element;
}

class SystemCapability
{
	isA Element;
}

class NetworkCapability
{
	isA Capability;
}

class NodeLinkCapability
{
	isA Capability;
}

class MaterielItemCapabilityNorm
{
	isA Capability;
}

class OrganizationTypeCapabilityNorm
{
	isA Capability;
}

class RequiredInformationTechnologyCapability
{
	isA Capability;
}

class InformationTechnologyRequirement
{
	isA Element;
	0..1 -> * RequiredInformationTechnologyCapability specifies;
}

class InformationExchangeRequirement
{
	isA InformationTechnologyRequirement;
}

class PAExchangeRequirement
{
	isA InformationTechnologyRequirement;
	0..1 -> * InformationExchangeRequirement isCitedIn;
}

namespace PrimitiveTypes;

class String
{
}