namespace GraphML;

class LocatedElement
{
	String location;
	String[] commentsBefore;
	String[] commentsAfter;
}

class Root
{
	isA LocatedElement;
	0..1 -> * Key keys;
	0..1 -> * Graph graphs;
}

class Element
{
	isA LocatedElement;
	String id;
	0..1 -> * Data datas;
}

class Key
{
	isA Element;
	ElemType for;
	String attrName;
	AttrType type;
	String defValue;
}

class Graph
{
	isA Element;
	EdgeType edgeDefault;
	0..1 -> * Element contents;
}

class Edge
{
	isA Element;
	0..1 -> 1..* Node source;
	0..1 -> 1..* Node target;
	0..1 -> 1..* Port sourceport;
	0..1 -> 1..* Port targetport;
}

class HyperEdge
{
	isA Element;
	0..1 -> * EndPoint endpoints;
}

class Node
{
	isA Element;
	0..1 -> 1..* Graph subgraph;
	0..1 -> * Port ports;
}

class Port
{
	isA LocatedElement;
	String name;
}

class EndPoint
{
	isA LocatedElement;
	0..1 -> 1..* Node node;
	0..1 -> 1..* Port port;
}

class Data
{
	isA LocatedElement;
	String key;
	String value;
}

namespace PrimitiveTypes;

class Boolean
{
}

class Integer
{
}

class double
{
}

class String
{
}