namespace UEML;

class UEMLObject
{
	0..1 object -- * //Geometry has;
	0..1 contains -- * //UEMLModel model;
}

class UEMLModel
{
	isA //UEMLObject;
	0..1 model -- * //UEMLObject contains;
}

class Geometry
{
	0..1 has -- 1..* //UEMLObject object;
}

class Port
{
	isA //UEMLObject;
}

class Flow
{
	isA //UEMLObject;
	0..1 classAssociation -- 1..* //AssociationConnector associationConnector;
}

class Activity
{
	isA //UEMLObject //FlowObject;
	0..1 in -- * //ResourceRole resourceRole;
	0..1 child -- * //Process parent;
	0..1 activity -- 1..* //OutputPort hasOutput;
	0..1 activity -- 1..* //InputPort hasInput;
	0..1 activityT -- 1..* //ActivityType activityType;
}

class Object
{
	isA //UEMLObject;
	0..1 carries -- * //IOFlow ioFlow;
}

class InformationObject
{
	isA //Object;
	0..1 carries -- * //ControlFlow controlFlow;
}

class Resource
{
	isA //Object;
	0..1 resourceCarries -- * //ResourceFlow carries;
	0..1 resourcePlays -- * //ResourceRole plays;
	0..1 resource -- 1..* //ResourceType resourceType;
	0..1 resource -- * //Commitment commitment;
}

class MaterialResource
{
	isA //PassiveObject;
}

class HumanResource
{
	isA //Agent;
}

class ResourceFlow
{
	isA //Flow;
	0..1 carries -- * //Resource resourceCarries;
}

class IOFlow
{
	isA //Flow;
	0..1 ioFlow -- * //Object carries;
}

class ControlFlow
{
	isA //Flow;
	0..1 controlFlow -- * //InformationObject carries;
}

class TriggerFlow
{
	isA //ControlFlow;
}

class ConstraintFlow
{
	isA //ControlFlow;
}

class ResourceRole
{
	isA //Port;
	0..1 plays -- * //Resource resourcePlays;
	0..1 -> * //RoleType roleQualifier;
	0..1 resourceRole -- 1..* //Activity in;
}

class RoleType
{
}

class Anchor
{
	isA //Port;
}

class OutputPort
{
	isA //Anchor;
	0..1 hasOutput -- 1..* //Activity activity;
}

class InputPort
{
	isA //Anchor;
	0..1 hasInput -- 1..* //Activity activity;
}

class ConnectionOperator
{
	isA //Anchor //FlowObject;
}

class AssociationConnector
{
	0..1 target -- * //FlowObject origin;
	0..1 origin -- * //FlowObject target;
	0..1 associationConnector -- 1..* //Flow classAssociation;
}

class FlowObject
{
	0..1 origin -- 1..* //AssociationConnector target;
	0..1 target -- 1..* //AssociationConnector origin;
}

class Event
{
	isA //FlowObject;
}

class ResourceType
{
	0..1 resourceType -- * //Resource resource;
}

class ActivityType
{
	0..1 activityType -- * //Activity activityT;
}

class PassiveObject
{
	isA //Resource;
}

class Commitment
{
	isA //PassiveObject;
	0..1 commitment -- 1..* //Resource resource;
	0..1 fulfills -- 1..* //Task task;
	0..1 obliger -- 1..* //Agent agentO;
	0..1 claimer -- 1..* //Agent agentC;
	0..1 collection_of -- 1..* //Contract contract;
}

class Software
{
	isA //Agent;
}

class Organisation
{
	isA //Agent;
}

class Process
{
	isA //Activity;
	0..1 parent -- 1..* //Activity child;
	0..1 process -- * //Contract fulfills;
	0..1 process -- 1..* //Service realises;
}

class Service
{
	isA //Resource;
	0..1 realises -- 1..* //Process process;
}

class Agent
{
	isA //Resource;
	0..1 agentO -- 1..* //Commitment obliger;
	0..1 agentC -- 1..* //Commitment claimer;
	0..1 agent -- 1..* //Contract has_parties;
}

class Contract
{
	isA //PassiveObject;
	0..1 fulfills -- 1..* //Process process;
	0..1 has_parties -- 2..* //Agent agent;
	0..1 contract -- 1..* //Commitment collection_of;
}

class Task
{
	isA //Activity;
	0..1 task -- * //Commitment fulfills;
}